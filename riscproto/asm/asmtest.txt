start:      ldis    ct,data@h
            or      ct,ct,0,data@l

            ldi     p0,10
            call    fibn            ; fibn(10) -> 0x37
            
            hvc     0,0             ; print PC, PSQ
            hvc     1,0             ; print general registers (rv should = 37)
            hvc     31,0            ; exit 0
            
        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
        ;
        ;   fibn - nth fibonacci number
        ;       p0:     i64
        ;       rv:     i64
        ;

fibn:       xor     rv,rv           ; a

            bez     p0,fibn_exit
            
            ldi     a1,1            ; b
            xor     a2,a2           ; i
            
fibn_l0:    add     a3,rv,a1
            inc     a2
            mov     rv,a1
            sub     a0,p0,a2
            mov     a1,a3
            bnz     a0,fibn_l0

fibn_exit:  ret

            .align  0x10

data:
