            origin  0x10000

ltext:

ipl:        ldis    a0,ltext@h          ; establish addressability
            or      ct,a0,0,ltext@l
            
            ldq     a0,ct,base0@ltext   ; load identity-mapped segment
            ldq     a1,ct,desc0@ltext
            mtcr    a0,b0
            mtcr    a1,d0
            
            ldq     a2,ct,base8@ltext   ; load supervisor segments
            ldq     a3,ct,desc8@ltext
            mtcr    a2,b8
            mtcr    a3,d8
            ldq     a0,ct,base9@ltext
            ldq     a1,ct,desc9@ltext
            ldq     a2,ct,basea@ltext
            ldq     a3,ct,desca@ltext
            mtcr    a0,b9
            mtcr    a1,d9
            mtcr    a2,b10
            mtcr    a3,d10
            
            mfcr    a0,psq              ; enable address translation
            ldi     a1,64
            mtcr    a0,a1,psq
            
            ldcas   ct,4,0              ; set up and enter program
            mov     sp,0
            jmp     ct,start
            
            align   0x10
            
base0:      dq      0x0                 ; storage area
desc0:      dq      0x0FFFFFFFFFFFFF00  ; XW, max size

base8:      dq      text                ; program segment
desc8:      dq      0xFE00              ; X, 64K

base9:      dq      0x1000              ; stack segment
desc9:      dq      0x1D00              ; W, 8K

basea:      dq      0xFFFF000000000000  ; I/O area
desca:      dq      0x0000FFFFFFFFFD08  ; WC, I/O size

            align   0x400
            
text:       origin  0x0

start:      ldca    a3,ct,message@start
            hvc     6,a3
            
            ldca    p0,ct,message@start
            call    strlen
            hvc     4,rv
            
            ldi     a0,0x101
            shl     a1,a0,0,32
            ldcs    rv,6,a1,0
            hvc     4,rv

            ldi     a0,4
            mtcr    a0,psq

strlen:     xor     rv,rv,rv
            bez     p0,strlen_end
            
            mov     a0,p0
            
strlen_l0:  ldc     a1,a0
            bez     a1,strlen_b0
            inc     a0
            br      strlen_l0

strlen_b0:  sub     rv,a0,p0

strlen_end: ret

message:    asciz   "Debug: Successful test program IPL"
